<?php
/**
 * Template for checkout page
 *
 * @version 20160202
 */
?>
<?php $isActive = $this->isActive(); ?>
<?php if ($isActive):?>
<?php $paymentInfo = $this->getPaymentInfo(); ?>
	<ul class="form-list" id="payment_form_<?php echo $this->getMethodCode() ?>">
		<div id="container"></div>
        <input type="hidden" id="cko-google-signature" name="payment[cko-google-signature]" value=""/>
        <input type="hidden" id="cko-google-protocolVersion" name="payment[cko-google-protocolVersion]" value=""/>
        <input type="hidden" id="cko-google-signedMessage" name="payment[cko-google-signedMessage]" value=""/>

        <script type="text/javascript">
            var scriptG = document.createElement('script');
            scriptG.type = "text/javascript";
            scriptG.src = 'https://pay.google.com/gp/p/js/pay.js';
            scriptG.async = true;
            document.getElementById('container').appendChild(scriptG);
            scriptG.onload=onGooglePayLoaded;

            var allowedPaymentMethods = ['CARD', 'TOKENIZED_CARD'];
            var allowedCardNetworks = ['MASTERCARD', 'VISA'];

            var tokenizationParameters = {
                tokenizationType: 'PAYMENT_GATEWAY',
                parameters: {
                    'gateway': 'checkoutltd',
                    'gatewayMerchantId': '<?php echo $this->getPublicKey();?>'
                }
            }

            /**
             * Initialize a Google Pay API client
             *
             * @returns {google.payments.api.PaymentsClient} Google Pay API client
             */
            function getGooglePaymentsClient() {
                return (new google.payments.api.PaymentsClient({ environment: '<?php echo $paymentInfo['environment'] ?>' }));
            }

            /**
             * Initialize Google PaymentsClient after Google-hosted JavaScript has loaded
             */
            function onGooglePayLoaded() {
                var paymentsClient = getGooglePaymentsClient();
                paymentsClient.isReadyToPay({ allowedPaymentMethods: allowedPaymentMethods })
                    .then(function (response) {
                        if (response.result) {
                            addGooglePayButton();
                            prefetchGooglePaymentData();
                        }
                    })
                    .catch(function (err) {
                        // show error in developer console for debugging
                        console.error(err);
                    });
            }

            /**
             * Add a Google Pay purchase button alongside an existing checkout button
             *
             * @see {@link https://developers.google.com/pay/api/web/guides/brand-guidelines|Google Pay brand guidelines}
             */
            function addGooglePayButton() {
                var paymentsClient = getGooglePaymentsClient();
                var button = paymentsClient.createButton({onClick:onGooglePaymentButtonClicked});
                document.getElementById('container').appendChild(button);
                button.style.display= 'none';
            }

            /**
             * Configure support for the Google Pay API
             *
             * @see {@link https://developers.google.com/pay/api/web/reference/object#PaymentDataRequest|PaymentDataRequest}
             * @returns {object} PaymentDataRequest fields
             */
            function getGooglePaymentDataConfiguration() {
                return {
                    // @todo a merchant ID is available for a production environment after approval by Google
                    // @see {@link https://developers.google.com/pay/api/web/guides/test-and-deploy/overview|Test and deploy}
                    merchantId: '<?php echo $this->getGooglePayMerchantId();?>',
                    paymentMethodTokenizationParameters: tokenizationParameters,
                    allowedPaymentMethods: allowedPaymentMethods,
                    cardRequirements: {
                        allowedCardNetworks: allowedCardNetworks
                    }
                };
            }

            /**
             * Provide Google Pay API with a payment amount, currency, and amount status
             *
             * @see {@link https://developers.google.com/pay/api/web/reference/object#TransactionInfo|TransactionInfo}
             * @returns {object} transaction info, suitable for use as transactionInfo property of PaymentDataRequest
             */
            function getGoogleTransactionInfo() {
                return {
                    currencyCode: '<?php echo $paymentInfo['currency'] ?>',
                    totalPriceStatus: 'FINAL',
                    // set to cart total
                    totalPrice: '<?php echo $paymentInfo['value'] ?>'
                };
            }

            /**
             * Prefetch payment data to improve performance
             */
            function prefetchGooglePaymentData() {
                var paymentDataRequest = getGooglePaymentDataConfiguration();
                // transactionInfo must be set but does not affect cache
                paymentDataRequest.transactionInfo = {
                    totalPriceStatus: 'NOT_CURRENTLY_KNOWN',
                    currencyCode: '<?php echo $paymentInfo['currency'] ?>'
                };
                var paymentsClient = getGooglePaymentsClient();
                paymentsClient.prefetchPaymentData(paymentDataRequest);
            }

            /**
             * Show Google Pay chooser when Google Pay purchase button is clicked
             */
            function onGooglePaymentButtonClicked() {
                var paymentDataRequest = getGooglePaymentDataConfiguration();
                paymentDataRequest.transactionInfo = getGoogleTransactionInfo();

                var paymentsClient = getGooglePaymentsClient();
                paymentsClient.loadPaymentData(paymentDataRequest)
                    .then(function (paymentData) {
                        // handle the response
                        processPayment(paymentData);
                    })
                    .catch(function (err) {
                        // show error in developer console for debugging
                        console.error(err);
                    });
            }

            /**
             * Process payment data returned by the Google Pay API
             *
             * @param {object} paymentData response from Google Pay API after shopper approves payment
             * @see {@link https://developers.google.com/pay/api/web/reference/object#PaymentData|PaymentData object reference}
             */
            function processPayment(paymentData) {
                document.getElementById('cko-google-signature').value = JSON.parse(paymentData.paymentMethodToken.token).signature;
                document.getElementById('cko-google-protocolVersion').value = JSON.parse(paymentData.paymentMethodToken.token).protocolVersion;
                document.getElementById('cko-google-signedMessage').value = JSON.parse(paymentData.paymentMethodToken.token).signedMessage;

                window.checkoutApiSubmitOrder();
            }
        </script>
	</ul>
<?php endif; ?>